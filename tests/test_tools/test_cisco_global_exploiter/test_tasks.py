from unittest import TestCase
from unittest.mock import MagicMock, patch

from tools.cisco_global_exploiter.tasks import CiscoGlobalExploiterTask


class CiscoGlobalExploiterTaskTest(TestCase):

    def setUp(self):
        self.stdin = MagicMock()
        self.port = MagicMock()
        self.executor = MagicMock()
        self.exploit = MagicMock()
        self.exploits = [self.exploit]

        self.task = CiscoGlobalExploiterTask(executor=self.executor, port=self.port, exploits=self.exploits)

    @patch('tools.cisco_global_exploiter.tasks.CiscoGlobalExploiterBase')
    def test_init(self, mock_command):
        task = CiscoGlobalExploiterTask(executor=self.executor, port=self.port, exploits=self.exploits)
        self.assertEqual(task.command, mock_command.return_value)

    def test_prepare_args(self):
        self.exploit.name = 'cisco14'
        self.port.node.ip = 'test_ip'

        result = self.task.prepare_args()
        expected = ['test_ip', '14']

        self.assertEqual(result, expected)
